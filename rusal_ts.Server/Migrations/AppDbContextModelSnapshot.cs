// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace rusal.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("rusal.Server.DAL.Entities.Pass", b =>
                {
                    b.Property<Guid>("PassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateApply")
                        .HasColumnType("datetime(6)");

                    b.Property<DateOnly>("Datefrom")
                        .HasColumnType("date");

                    b.Property<DateOnly>("Dateto")
                        .HasColumnType("date");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Organization")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TypePeriod")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("PassId");

                    b.ToTable("Passes");

                    b.HasData(
                        new
                        {
                            PassId = new Guid("70c6a0f2-29c5-4e67-ba38-b96bb276f665"),
                            Comment = "Ура #1",
                            DateApply = new DateTime(2023, 12, 28, 21, 10, 55, 0, DateTimeKind.Unspecified),
                            Datefrom = new DateOnly(2023, 12, 4),
                            Dateto = new DateOnly(2023, 12, 8),
                            Number = "2023-12-1",
                            Organization = "СФУ",
                            Status = "Действителен",
                            Type = "Постоянный",
                            TypePeriod = "Разовый"
                        },
                        new
                        {
                            PassId = new Guid("1695ec69-b0f3-4589-beaa-e926ed14bb0a"),
                            Comment = "Супер",
                            DateApply = new DateTime(2023, 12, 28, 21, 11, 42, 0, DateTimeKind.Unspecified),
                            Datefrom = new DateOnly(2023, 12, 8),
                            Dateto = new DateOnly(2023, 12, 17),
                            Number = "2023-12-2",
                            Organization = "РУСАЛ #2",
                            Status = "Просрочен",
                            Type = "Временный",
                            TypePeriod = "Разовый"
                        },
                        new
                        {
                            PassId = new Guid("9416d93b-71f5-4ca0-9a45-5b2de24e1a93"),
                            Comment = "ТОП №1",
                            DateApply = new DateTime(2023, 12, 28, 22, 23, 38, 0, DateTimeKind.Unspecified),
                            Datefrom = new DateOnly(2023, 12, 30),
                            Dateto = new DateOnly(2023, 12, 31),
                            Number = "2023-12-3",
                            Organization = "Хабр + StackOverFlow",
                            Status = "Приостановлен",
                            Type = "Временный",
                            TypePeriod = "Разовый"
                        },
                        new
                        {
                            PassId = new Guid("61fc2af2-66ad-4231-b25b-781bd096a2a7"),
                            Comment = "Best",
                            DateApply = new DateTime(2023, 12, 28, 22, 25, 55, 0, DateTimeKind.Unspecified),
                            Datefrom = new DateOnly(2023, 12, 30),
                            Dateto = new DateOnly(2023, 12, 31),
                            Number = "2023-12-4",
                            Organization = "Apple",
                            Status = "Изъят",
                            Type = "Разовый",
                            TypePeriod = "Разовый"
                        },
                        new
                        {
                            PassId = new Guid("0950b1d9-c6d2-497f-90ba-beae5e4c638f"),
                            Comment = "Awesome #1",
                            DateApply = new DateTime(2023, 12, 29, 0, 22, 50, 0, DateTimeKind.Unspecified),
                            Datefrom = new DateOnly(2023, 12, 29),
                            Dateto = new DateOnly(2023, 12, 30),
                            Number = "2023-12-5",
                            Organization = "Sony",
                            Status = "Приостановлен",
                            Type = "Постоянный",
                            TypePeriod = "Разовый"
                        });
                });

            modelBuilder.Entity("rusal.Server.DAL.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d369af29-7615-4962-8623-206f3db0457b"),
                            PasswordHash = "202cb962ac59075b964b07152d234b70",
                            Username = "admin"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
